# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/nginx

# =============================================================================
# DEPENDENCY CHECKS AND SETUP
# =============================================================================

- name: Setup Helm dependency
  ansible.builtin.include_tasks: helm-setup.yml
  tags:
    - helm
    - dependencies

# =============================================================================
# KUBECONFIG VALIDATION
# =============================================================================

- name: Set kubeconfig path
  ansible.builtin.set_fact:
    nginx_kubeconfig_file: >-
      {{
        nginx_ingress_kubeconfig.path
        if nginx_ingress_kubeconfig.path != ""
        else ansible_env.HOME + "/.kube/config"
      }}

- name: Check if kubeconfig file exists
  ansible.builtin.stat:
    path: "{{ nginx_kubeconfig_file }}"
  register: nginx_kubeconfig_stat

- name: Fail if kubeconfig file does not exist
  ansible.builtin.fail:
    msg: "Kubeconfig file not found at {{ nginx_kubeconfig_file }}"
  when: not nginx_kubeconfig_stat.stat.exists

# =============================================================================
# NGINX INGRESS INSTALLATION
# =============================================================================

- name: Create temporary directory for values file
  ansible.builtin.tempfile:
    state: directory
    suffix: nginx_ingress
  register: nginx_temp_dir

- name: Generate values.yaml from template
  ansible.builtin.template:
    src: "values.yaml.j2"
    dest: "{{ nginx_temp_dir.path }}/values.yaml"
    mode: '0644'
  register: nginx_values_file

- name: Install nginx ingress controller using helm
  kubernetes.core.helm:
    name: "{{ nginx_ingress_release.name }}"
    chart_ref: "{{ nginx_ingress_chart.name }}"
    chart_repo_url: "{{ nginx_ingress_chart.repo }}"
    chart_version: "{{ nginx_ingress_chart.version }}"
    release_namespace: "{{ nginx_ingress_release.namespace }}"
    create_namespace: "{{ nginx_ingress_release.create_namespace }}"
    values_files:
      - "{{ nginx_values_file.dest }}"
    kubeconfig: "{{ nginx_kubeconfig_file }}"
    wait: "{{ nginx_ingress_helm.wait }}"
    wait_timeout: "{{ nginx_ingress_helm.timeout }}"
    force: "{{ nginx_ingress_helm.force }}"
    state: present
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"
  register: nginx_helm_result

- name: Display helm installation result
  ansible.builtin.debug:
    msg: |
      Nginx Ingress Controller installed successfully!
      - Chart Version: {{ nginx_ingress_chart.version }}
      - App Version: {{ nginx_ingress_chart.app_version }}
      - Release: {{ nginx_ingress_release.name }}
      - Namespace: {{ nginx_ingress_release.namespace }}
  when: nginx_helm_result is succeeded

- name: Clean up temporary directory
  ansible.builtin.file:
    path: "{{ nginx_temp_dir.path }}"
    state: absent
  when: nginx_temp_dir is defined

# Note: Service information and detailed status will be displayed by the test playbook
