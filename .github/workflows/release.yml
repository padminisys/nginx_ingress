name: Release Collection and Execution Environment

on:
  push:
    branches:
      - 'release/*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/awx-ee

jobs:
  publish-collection:
    name: Build and Publish Collection to Galaxy
    runs-on: ubuntu-latest
    outputs:
      collection-version: ${{ steps.get-version.outputs.version }}
      collection-name: ${{ steps.get-version.outputs.name }}
      collection-namespace: ${{ steps.get-version.outputs.namespace }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core>=2.16
          pip install ansible-dev-tools

      - name: Get collection metadata
        id: get-version
        run: |
          VERSION=$(grep '^version:' galaxy.yml | awk '{print $2}')
          NAME=$(grep '^name:' galaxy.yml | awk '{print $2}')
          NAMESPACE=$(grep '^namespace:' galaxy.yml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "namespace=$NAMESPACE" >> $GITHUB_OUTPUT
          echo "Collection: $NAMESPACE.$NAME version $VERSION"

      - name: Build collection
        run: |
          ansible-galaxy collection build --force
          ls -la *.tar.gz

      - name: Publish collection to Galaxy
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.ANSIBLE_GALAXY_API_KEY }}
        run: |
          COLLECTION_FILE=$(ls *.tar.gz | head -1)
          echo "Publishing $COLLECTION_FILE to Ansible Galaxy..."
          ansible-galaxy collection publish "$COLLECTION_FILE" --api-key="$ANSIBLE_GALAXY_API_KEY"

      - name: Upload collection artifact
        uses: actions/upload-artifact@v4
        with:
          name: collection-artifact
          path: "*.tar.gz"
          retention-days: 30

  verify-deployment:
    name: Verify Published Artifacts
    runs-on: ubuntu-latest
    needs: [publish-collection]
    if: always() && needs.publish-collection.result == 'success'

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Verify collection on Galaxy
        run: |
          echo "Waiting for collection to be available on Galaxy..."
          sleep 30
          ansible-galaxy collection install ${{ needs.publish-collection.outputs.collection-namespace }}.${{ needs.publish-collection.outputs.collection-name }}:${{ needs.publish-collection.outputs.collection-version }} --force
          ansible-galaxy collection list | grep ${{ needs.publish-collection.outputs.collection-namespace }}